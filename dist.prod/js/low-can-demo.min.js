function initGauges(){function e(){var e=$("#quad1").outerHeight(),s=$("#speedGauge").outerHeight(),t=Math.ceil(1e3*s/e)/10+1;$("#cluster").css("height",t+"%")}gauges.speed=new steelseries.Radial("speedGauge",{gaugeType:steelseries.GaugeType.TYPE4,frameDesign:steelseries.FrameDesign.BLACK_METAL,backgroundColor:steelseries.BackgroundColor.CARBON,size:250,titleString:"Speed",unitString:"Km/h",lcdVisible:!0,niceScale:!0,maxValue:200,maxMeasuredValue:0,maxMeasuredValueVisible:!0,thresholdVisible:!1,ledVisible:!1,pointerType:steelseries.PointerType.TYPE11,useOdometer:!1,odometerParams:{digits:6}}),gauges.rpm=new steelseries.Radial("rpmGauge",{gaugeType:steelseries.GaugeType.TYPE4,frameDesign:steelseries.FrameDesign.BLACK_METAL,backgroundColor:steelseries.BackgroundColor.CARBON,size:200,titleString:"RPM",unitString:"x1000",lcdVisible:!1,niceScale:!0,maxValue:5,maxMeasuredValue:0,maxMeasuredValueVisible:!1,section:[steelseries.Section(4,8,"rgba(255, 0, 0, 0.7)")],area:[steelseries.Section(5,8,"rgba(255, 0, 0, 0.3)")],thresholdVisible:!1,ledVisible:!1,pointerType:steelseries.PointerType.TYPE11}),gauges.maf=new steelseries.Radial("MAFGauge",{gaugeType:steelseries.GaugeType.TYPE4,frameDesign:steelseries.FrameDesign.BLACK_METAL,backgroundColor:steelseries.BackgroundColor.CARBON,size:200,titleString:"Air flow Rate",unitString:"grams/sec",lcdVisible:!0,lcdColor:steelseries.LcdColor.STANDARD,lcdDecimals:1,niceScale:!0,minValue:0,maxValue:655,minMeasuredValue:0,maxMeasuredValue:conscale,maxMeasuredValueVisible:!0,section:[steelseries.Section(0,255,"rgba(0, 255, 0, 0.5)"),steelseries.Section(256,326,"rgba(255, 255, 0, 0.5)"),steelseries.Section(327,600,"rgba(255, 128, 0, 0.5)"),steelseries.Section(601,655,"rgba(255, 0, 0, 0.5)")],useValueGradient:!0,thresholdVisible:!1,ledVisible:!1,pointerType:steelseries.PointerType.TYPE11}),gauges.iatemp=new steelseries.Radial("IATempGauge",{gaugeType:steelseries.GaugeType.TYPE4,frameDesign:steelseries.FrameDesign.BLACK_METAL,backgroundColor:steelseries.BackgroundColor.CARBON,size:200,titleString:"Intake air temp",unitString:"Â°C",lcdVisible:!0,lcdColor:steelseries.LcdColor.STANDARD,lcdDecimals:1,niceScale:!0,minValue:0,maxValue:100,minMeasuredValue:0,maxMeasuredValue:100,maxMeasuredValueVisible:!0,section:[steelseries.Section(0,30,"rgba(0, 255, 0, 0.5)"),steelseries.Section(31,50,"rgba(255, 255, 0, 0.5)"),steelseries.Section(51,70,"rgba(255, 128, 0, 0.5)"),steelseries.Section(71,100,"rgba(255, 0, 0, 0.5)")],useValueGradient:!0,thresholdVisible:!1,ledVisible:!1,pointerType:steelseries.PointerType.TYPE11}),gauges.torque=new steelseries.Radial("torqueGauge",{gaugeType:steelseries.GaugeType.TYPE2,frameDesign:steelseries.FrameDesign.BLACK_METAL,backgroundColor:steelseries.BackgroundColor.CARBON,size:200,titleString:"Load",unitString:"%",lcdVisible:!1,niceScale:!0,minValue:0,maxValue:100,maxMeasuredValue:0,maxMeasuredValueVisible:!1,section:[steelseries.Section(0,0,"rgba(0, 255, 0, 0.7)"),steelseries.Section(50,1500,"rgba(255, 128, 0, 0.7)")],area:[steelseries.Section(0,0,"rgba(0, 255, 0, 0.3)"),steelseries.Section(50,1500,"rgba(255, 128, 0, 0.3)")],threshold:0,thresholdVisible:!0,ledVisible:!1,pointerType:steelseries.PointerType.TYPE4}),$(window).resize(e),e()}function clearGauges(){for(var e in gauges)switch(e){case"clock":gauges[e].setValue("-");break;case"speed":gauges[e].setValue(0);break;default:gauges[e].setValue(0)}}function gotVehicleSpeed(e){vspeed=Math.round(e.data.value),wdgVsp.innerHTML=String(vspeed),gauges.speed.setValue(vspeed)}function gotTorque(e){torque=Math.round(e.data.value),wdgTrq.innerHTML=String(torque),gauges.torque.setValue(torque)}function gotEngineSpeed(e){espeed=Math.round(e.data.value),wdgEsp.innerHTML=String(espeed),gauges.rpm.setValue(espeed/1e3)}function gotFuelLevel(e){fuel=Math.round(e.data.value),wdgFue.innerHTML=fuel,gauges.maf.setValue(fuel)}function gotTemp(e){temp=Math.round(e.data.value),wdgTem.innerHTML=temp,gauges.iatemp.setValue(temp)}function gotStart(e){document.body.className="started",vspeed=0,espeed=0,heading=0,cons=void 0,consa=[],wdgVsp.innerHTML=wdgEsp.innerHTML=wdgTem.innerHTML=wdgFue.innerHTML="?";for(var s=0;s<9;s++)wdgConX[s].style.height="0%",wdgConX[s].innerHTML=""}function gotStop(e){document.body.className="connected"}function gotAny(e){"low-can/STOP"!=e.event&&(document.body.className="started"),msgcnt++,wdgTem.innerHTML=temp,gauges.iatemp.setValue(temp)}function gotDiag(e){switch(e.data.name){case"diagnostic_messages.vehicle.speed":gotVehicleSpeed(e);break;case"diagnostic_messages.mass.airflow":gotFuelLevel(e);break;case"diagnostic_messages.engine.speed":gotEngineSpeed(e);break;case"diagnostic_messages.engine.load":gotTorque(e)}}function updateMsgRate(){var e=+new Date;if(msgprvts){var s=e-msgprvts;msgrate=Math.round(1e4*(msgcnt-msgprv)/s)/10,wdgMsg.innerHTML=String(msgrate)}msgprv=msgcnt,msgprvts=e}function gotStat(e){wdgStat.innerHTML=e.data}function onAbort(){document.body.className="not-connected"}function onOpen(){ws.call("low-can/subscribe",{event:["diagnostic_messages.vehicle.speed","diagnostic_messages.mass.airflow","diagnostic_messages.engine.speed","diagnostic_messages.engine.load","diagnostic_messages.intake.air.temperature"]},onSubscribed,onAbort),ws.call("stat/subscribe",!0),ws.onevent("stat/stat",gotStat)}function onClose(){ws.call("low-can/unsubscribe",{event:["diagnostic_messages.engine.speed","diagnostic_messages.mass.airflow","diagnostic_messages.vehicle.speed","diagnostic_messages.engine.load","diagnostic_messages.intake.air.temperature"]},onUnsubscribed,onAbort),ws.call("stat/unsubscribe",!0),ws.onevent("stat/stat",gotStat)}function onSubscribed(){document.body.className="connected",ws.onevent("low-can/diagnostic_messages",gotDiag),ws.onevent("low-can",gotAny)}function onUnsubscribed(){document.body.className="disconnected",ws.onevent("low-can/diagnostic_messages",gotDiag),ws.onevent("low-can",gotAny)}function replyok(e){document.getElementById("output").innerHTML="OK: "+JSON.stringify(e)}function replyerr(e){document.getElementById("output").innerHTML="ERROR: "+JSON.stringify(e)}function send(e){var s=document.getElementById("api").value,t=document.getElementById("verb").value;ws.call(s+"/"+t,{data:e},replyok,replyerr)}function doConnect(){document.body.className="connecting",ws=new afb.ws(onOpen,onAbort)}function doDisconnect(){document.body.className="connecting",ws=new afb.ws(onClose,onAbort)}AFB=function(e,s){var t="ws://"+window.location.host+"/"+e,n=("http://"+window.location.host+"/"+e,function(){var e,t=s,n=function(e,s){this.token=e,this.uuid=s};return n.prototype={get token(){return t},set token(e){e&&(t=e)},get uuid(){return e},set uuid(s){s&&(e=s)}},new n}()),i=function(){function e(e){var s=this.onabort;s&&(delete this.onopen,delete this.onabort,s&&s(this)),this.onerror&&this.onerror(this)}function s(e){for(var s in this.pendings){var t=this.pendings[s].onerror;t&&t(null,this)}this.pendings={},this.onclose&&this.onclose()}function i(e,s,t){var n=e[s];n&&n.forEach(function(e){e(t)});var i=s.indexOf("/");i>=0&&(n=e[s.substring(0,i)],n&&n.forEach(function(e){e(t)})),n=e["*"],n&&n.forEach(function(e){e(t)})}function a(e,s,t,n){if(s in e){var i=e[s];delete e[s];var a=i[n];a&&a(t)}}function o(e){var s=JSON.parse(e.data),t=s[0],o=s[1],r=s[2];switch(n.token=s[3],t){case c:a(this.pendings,o,r,0);break;case d:a(this.pendings,o,r,1);break;case m:default:i(this.awaitens,o,r)}}function r(){this.ws.close()}function g(e,s,t,i){var a,o;do a=String(this.counter=4095&this.counter+1);while(a in this.pendings);this.pendings[a]=[t,i],o=[u,a,e,s],n.token&&o.push(n.token),this.ws.send(JSON.stringify(o))}function l(e,s){var t=e,n=this.awaitens[t]||(this.awaitens[t]=[]);n.push(s)}var u=2,c=3,d=4,m=5,p="x-afb-ws-json1",b=function(i,a){var r=t;n.token&&(r=r+"?x-afb-token="+n.token,n.uuid&&(r=r+"&x-afb-uuid="+n.uuid)),this.ws=new WebSocket(r,[p]),this.pendings={},this.awaitens={},this.counter=0,this.ws.onopen=i.bind(this),this.ws.onerror=e.bind(this),this.ws.onclose=s.bind(this),this.ws.onmessage=o.bind(this),this.onopen=i,this.onabort=a};return b.prototype={close:r,call:g,onevent:l},b}();return{context:n,ws:i}};var urlParams={};location.search.substr(1).split("&").forEach(function(e){var s=e.split("=")[0],t=decodeURIComponent(e.split("=")[1]);s in urlParams?urlParams[s].push(t):urlParams[s]=[t]});var afb=new AFB("api",urlParams.token[0]),ws,vspeed=0,espeed=0,torque=0,R2D=180/Math.PI,D2R=Math.PI/180,fuel,con,cons,consa=[],minspeed=5,temp=18,wdgTem,wdgVsp,wdgEsp,wdgTrq,wdgFue,wdgGpred,wdgGpblack,conscale=40,condt=6e4,gauges={},msgcnt=0,msgprv=0,msgprvts=0;$(function(){wdgVsp=document.getElementById("vsp"),wdgEsp=document.getElementById("esp"),wdgTrq=document.getElementById("trq"),wdgFue=document.getElementById("fue"),wdgTem=document.getElementById("tem"),wdgStat=document.getElementById("stat"),wdgMsg=document.getElementById("msg"),initGauges(),doConnect(),setInterval(updateMsgRate,250)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
